name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version (e.g. 123)"
        required: true
        type: number

env:
  REGISTRY_ID: ${{ secrets.YC_REGISTRY_ID }}
  APP_NAME: app

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Verify image exists
        run: |
          docker pull cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:${{ github.event.inputs.release_version }}_latest || exit 1

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VM_HOST }} # Добавьте в Secrets
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            docker stop app || true
            docker rm app || true
            echo "${{ secrets.YC_AUTH_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex
            docker run -d --name app -p 80:3000 \
              ${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:${{ github.event.inputs.release_version }}_latest

      - name: Find release issue
        id: find-issue
        run: |
          gh issue list --state all --search "Release ${{ github.event.inputs.release_version }}" --json number -q '.[0].number' > issue_number.txt
          echo "number=$(cat issue_number.txt)" >> $GITHUB_OUTPUT

      - name: Add deployment comment
        if: steps.find-issue.outputs.number != ''
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.find-issue.outputs.number }},
              body: `**Deployed to PROD on:** ${new Date().toISOString()}
                     **By:** ${{ github.actor }}`
            });
